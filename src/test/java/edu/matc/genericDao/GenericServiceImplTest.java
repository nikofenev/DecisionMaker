package edu.matc.genericDao;import edu.matc.decisionMaker.Decision;import org.junit.Before;import org.junit.Test;import java.util.HashMap;import java.util.List;import java.util.Map;import static org.junit.Assert.*;/** * The type Generic service impl test. */public class GenericServiceImplTest {    IGenericService<Decision> answerService;    Decision decisionForTests = new Decision("Ask me again in ten minutes", "false", "true", "true");    @Before    public void setUp(){        answerService = new GenericServiceImpl<>(                Decision.class, HibernateUtil.getSessionFactory());    }    /**     * Save test.     *     * @throws Exception the exception     */    @Test    public void saveTest() throws Exception {        answerService.save(decisionForTests);        assertEquals("Retrieval of saved object failed", "Ask me again in ten minutes", answerService.get(Decision.class, 5).getAnswer());        answerService.delete(decisionForTests);    }    /**     * Get test.     *     * @throws Exception the exception     */    @Test    public void getTest() throws Exception {        Decision decisionToTest = answerService.get(Decision.class, 1);        assertEquals("Decision retrieved is not what was expected", "what are you thinking", decisionToTest.getAnswer());    }    /**     * Delete test.     *     * @throws Exception the exception     */    @Test    public void deleteTest() throws Exception {        answerService.save(decisionForTests);        answerService.delete(decisionForTests);        assertEquals("List size after delete is not what was expected.", 4, answerService.getAll().size());    }    /**     * Query test.     *     * @throws Exception the exception     */    @Test    public void queryTest() throws Exception {        Map<String, Object> params = new HashMap<>();        List<Decision> returnedAnswer = answerService.query("from decisions where crude='false' and indecisive='true'", params);        assertEquals("Number of decisions return does not match expected.",2, returnedAnswer.size());    }    /**     * Get all test.     *     * @throws Exception the exception     */    @Test    public void getAllTest() throws Exception {        List<Decision> answerList = answerService.getAll();        assertEquals("Number of decisions returned is not as expected.",4,answerList.size());    }}